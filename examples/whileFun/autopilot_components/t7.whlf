load ../wfe.maude

***
*** EXAMPLE 12
***

(mod EXAMPLE is
 pr EVALUATION-WHILE .

 op myFuns : -> FunSet .
 eq myFuns = 'Main (nv)
{
  Call 'stabilisation_task ('empty)
}

'stabilisation_task ('empty)
{
	Call 'ir_update ('empty) ;
	Call 'estimator_update_state_infrared ('empty) ;
	Call 'roll_pitch_pid_run ('empty) ;
	Call 'update_arr ('to_fbw.channels, 'RADIO_THROTTLE, 'desired_gaz) ;
	Call 'update_arr ('to_fbw.channels, 'RADIO_ROLL, 'desired_aileron) ;
	Call 'update_arr ('to_fbw.channels, 'RADIO_PITCH, 'desired_elevator) ;
	Local '__tmp_1_ ;
	'__tmp_1_ := 'MAX_PPRZ *. 'estimator_phi ;
	Call 'TRIM_PPRZ ('__tmp_1_) ;
	Call 'update_arr ('to_fbw.channels, 'RADIO_GAIN1, '__res_TRIM_PPRZ)
}

'ir_update ('empty)
{
	Local 'simul_ir_roll ;
	Local 'simul_ir_pitch ;
	'ir_roll := 'simul_ir_roll -. 'ir_roll_neutral ;
	'ir_pitch := 'simul_ir_pitch -. 'ir_pitch_neutral
}

'estimator_update_state_infrared ('empty)
{
	Local 'rad_of_ir ;
	(If Equal ('ir_estim_mode, 'IR_ESTIM_MODE_ON) And
		Equal ('EstimatorGainIsCorrect, 1)
	Then 'rad_of_ir := 'estimator_rad_of_ir
	Else 'rad_of_ir := 'ir_rad_of_ir) ;
	'estimator_phi := 'rad_of_ir *. 'ir_roll ;
	'estimator_theta := 'rad_of_ir *. 'ir_pitch
}

'roll_pitch_pid_run ('empty)
{
	Local 'err ;
	'err := 'estimator_phi -. 'desired_roll ;
	Local '__tmp_1_ ;
	'__tmp_1_ := 'roll_pgain *. 'err ;
	Call 'TRIM_PPRZ ('__tmp_1_) ;
	'desired_aileron := '__res_TRIM_PPRZ ;
	(If Lt ('pitch_of_roll, 0)
	Then 'pitch_of_roll := 0) ;
	Call 'fabs ('estimator_phi) ;
	'err := 0 -. (('estimator_theta -. 'desired_pitch) -.
		('pitch_of_roll *. '__res_fabs)) ;
	'__tmp_1_ := 'pitch_pgain *. 'err ;
	Call 'TRIM_PPRZ ('__tmp_1_) ;
	'desired_elevator := '__res_TRIM_PPRZ
}

'TRIM_PPRZ ('pprz)
{
	If Lt ('pprz, 'MIN_PPRZ)
	Then '__res_TRIM_PPRZ := 'MIN_PPRZ
	Else
	(
		If Gt ('pprz, 'MAX_PPRZ)
		Then '__res_TRIM_PPRZ := 'MAX_PPRZ
		Else '__res_TRIM_PPRZ := 'pprz
	)
}

'fabs ('val)
{
	If Gt ('val, 0)
	Then '__res_fabs := 'val
	Else '__res_fabs := 0 -. 'val
}

'lookup_arr ('a, 'idx)
{
	'__res_lookup_arr := 'a +. 'idx
}

'update_arr ('a, 'idx, 'val)
{
	Call 'lookup_arr ('a, 'idx) ;
	'__res_update_arr := 'val
} .

 ***********************************

 ops test1 test2 test3 test4 test5 test6 test7 test8 test9
     test10 test11 : -> Statement .

 eq test1 = <
 	Call 'Main (nv),
 'EstimatorGainIsCorrect	=	2
 '__res_TRIM_PPRZ	=	1
 '__res_fabs	=	1
 'desired_aileron	=	3
 'desired_elevator	=	3
 'desired_gaz	=	2
 'desired_pitch	=	2
 'desired_roll	=	1
 'ir_estim_mode	=	3
 'ir_pitch	=	3
 'ir_pitch_neutral	=	2
 'ir_rad_of_ir	=	3
 'ir_roll	=	3
 'ir_roll_neutral	=	0
 'pitch_of_roll	=	1
 'pitch_pgain	=	3
 'roll_pgain	=	2
 'simul_ir_pitch	=	2
 'simul_ir_roll	=	3
 ,
 nb,
 myFuns > .

endm)

(set side-effect sorts ESt RWBUF .)

(set context-update rules CallF .)

(rew test1 .)

eof

1. (islice Statement with defs myFuns wrt 'desired_gaz 'desired_aileron
                                          'desired_elevator 'desired_roll .)

2. (islice Statement with defs myFuns wrt 'estimator_phi 'estimator_theta
                                          'estimator_rad_of_ir .)

3. (islice Statement with defs myFuns wrt 'to_fbw.channels .)

4. (islice Statement with defs myFuns wrt 'simul_ir_roll 'simul_ir_pitch .)

5. (islice Statement with defs myFuns wrt 'RADIO_THROTTLE 'RADIO_ROLL
                                          'RADIO_PITCH 'MIN_PPRZ 'MAX_PPRZ .)

6. (islice Statement with defs myFuns wrt '__res_TRIM_PPRZ '__res_lookup_arr
                                          '__res_update_arr .)

7. (islice Statement with defs myFuns wrt '__res_lookup_arr '__res_update_arr .)

	1. { desired_gaz, desired_aileron, desired_elevator, desired_roll }
		-> file t7_desired_whlf.slice
	2. { estimator_phi, estimator_theta, estimator_rad_of_ir }
		-> file t7_estimator_whlf.slice
	3. { to_fbw.channels } -> file t7_fbw_channels_whlf.slice
	4. { simul_ir_roll, simul_ir_pitch } -> file t7_simul_ir_whlf.slice
	5. { RADIO_THROTTLE, RADIO_ROLL, RADIO_PITCH,
		MIN_PPRZ, MAX_PPRZ } -> file t7_radio_params_whlf.slice
	6. { __res_TRIM_PPRZ, __res_lookup_arr, __res_update_arr }
		-> file t7_res_whlf.slice
	7. { __res_lookup_arr, __res_update_arr } -> file t7_arr_whlf.slice

(red myFuns .)