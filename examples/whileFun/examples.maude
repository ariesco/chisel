load wfe.maude

(fmod TEST is
  pr EVALUATION-WHILE .

  op pow : -> Com .
  eq pow = x := 1 ;
           i := y ;
           While Not Equal(x, 0) Do
             x := x *. y ;
             i := i -. 1 .

  op foo : -> Com .
  eq foo = x := 1 ;
           y := 2 ;
           z := x +. y ;
           If Not Equal(x, y)
           Then w := 0 .

  op testPow : -> Statement .
  eq testPow = < pow, y = 5, nb, nf > .

  op testFoo : -> Statement .
  eq testFoo = < foo, mt, nb, nf > .
endfm)

(set side-effect sorts ESt RWBUF .)

(dataflow inferences Prog .)

(slice testPow wrt x .)

(slice foo wrt x y .)

