load wfe.maude

***
*** EXAMPLE 4 - AUTOPILOT PERIODIC
***

(mod EXAMPLE is
 pr EVALUATION-WHILE .

 op myFuns : -> FunSet .
 eq myFuns =
    'Main (nv)
{
  'fatal_error_nb := 0 ;
  'version := 1 ;
  'cputime := 0 ;
  'pprz_mode := 'PPRZ_MODE_MANUAL ;
  'vertical_mode := 'VERTICAL_MODE_MANUAL ;
  'lateral_mode := 'LATERAL_MODE_MANUAL ;
  'ir_estim_mode := 'IR_ESTIM_MODE_ON ;
  'auto_pitch := 0 ;
  Local 'rc_event_1 ;
  Local 'rc_event_2 ;
  Local 'vsupply ;
  Local 'mcu1_status ;
  Local 'mcu1_ppm_cpt ;
  'low_battery := 0 ;
  Local 'slider_1_val ;
  Local 'slider_2_val ;
  'launch := 0 ;
  'boot := 1 ;
  Local 'count ;
  Local 'est_pos_x ;
  Local 'est_pos_y ;
  Local 'est_fcourse ;
  Local 'ticks_last_est ;

  '_20Hz := 0 ;
  '_1Hz := 0 ;
  '_20Hz := 0 ;
  '_1Hz := 0 ;

  Call 'send_boot ('empty)
}


'send_boot ('empty)
{
	If Equal ('boot, 1)
	Then
	(
		Call 'DOWNLINK_SEND_BOOT ('version) ;
		Call 'DOWNLINK_SEND_RAD_OF_IR ('estimator_ir, 'estimator_rad,
			'estimator_rad_of_ir, 'ir_roll_neutral,
			'ir_pitch_neutral) ;
		'boot := 0
	)
}


'DOWNLINK_SEND_BOOT ('version)
{
	If Gt ('MODEM_CHECK_FREE_SPACE, 6)
	Then
	(
          Call 'ModemStartMessage ('DL_BOOT) ;
          Call 'MODEM_PUT_2_BYTE_BY_ADDR ('version) ;
          Call 'ModemEndMessage ('empty)
        )
        Else 'modem_nb_ovrn := 'modem_nb_ovrn +. 1
}


'DOWNLINK_SEND_RAD_OF_IR ('estimator_ir, 'estimator_rad, 'estimator_rad_of_ir,
			'ir_roll_neutral, 'ir_pitch_neutral)
{
	If Gt ('MODEM_CHECK_FREE_SPACE, 20)
	Then
	(
          Call 'ModemStartMessage ('DL_RAD_OF_IR) ;
          Call 'MODEM_PUT_4_BYTE_BY_ADDR ('estimator_ir) ;
          Call 'MODEM_PUT_4_BYTE_BY_ADDR ('estimator_rad) ;
          Call 'MODEM_PUT_4_BYTE_BY_ADDR ('estimator_rad_of_ir) ;
          Call 'MODEM_PUT_2_BYTE_BY_ADDR ('ir_roll_neutral) ;
          Call 'MODEM_PUT_2_BYTE_BY_ADDR ('ir_pitch_neutral) ;
          Call 'ModemEndMessage ('empty)
        )
        Else 'modem_nb_ovrn := 'modem_nb_ovrn +. 1
}

'DOWNLINK_SEND_CALIB_START ('empty)
{
	If Equal ('MODEM_CHECK_FREE_SPACE, 1)
	Then
	(
		Call 'ModemStartMessage ('DL_CALIB_START) ;
		Call 'ModemEndMessage ('empty)
        )
        Else 'modem_nb_ovrn := 'modem_nb_ovrn +. 1
}


'DOWNLINK_SEND_CALIB_CONTRAST ('ir_contrast)
{
	If Gt ('MODEM_CHECK_FREE_SPACE, 6)
	Then
	(
          Call 'ModemStartMessage ('DL_CALIB_CONTRAST) ;
          Call 'MODEM_PUT_2_BYTE_BY_ADDR ('ir_contrast) ;
          Call 'ModemEndMessage ('empty)
        )
        Else 'modem_nb_ovrn := 'modem_nb_ovrn +. 1
}

'DOWNLINK_SEND_ATTITUDE ('estimator_phi, 'estimator_psi, 'estimator_theta)
{
	If Gt ('MODEM_CHECK_FREE_SPACE, 16)
	Then
	(
          Call 'ModemStartMessage ('DL_ATTITUDE) ;
          Call 'MODEM_PUT_4_BYTE_BY_ADDR ('estimator_phi) ;
          Call 'MODEM_PUT_4_BYTE_BY_ADDR ('estimator_psi) ;
          Call 'MODEM_PUT_4_BYTE_BY_ADDR ('estimator_theta) ;
          Call 'ModemEndMessage ('empty)
        )
        Else 'modem_nb_ovrn := 'modem_nb_ovrn +. 1
}

'DOWNLINK_SEND_ADC ('roll, 'pitch)
{
	If Gt ('MODEM_CHECK_FREE_SPACE, 8)
	Then
	(
          Call 'ModemStartMessage ('DL_ADC) ;
          Call 'MODEM_PUT_4_BYTE_BY_ADDR ('roll) ;
          Call 'MODEM_PUT_4_BYTE_BY_ADDR ('pitch) ;
          Call 'ModemEndMessage ('empty)
        )
        Else 'modem_nb_ovrn := 'modem_nb_ovrn +. 1
}

'DOWNLINK_SEND_SETTINGS ('mode, 'slider_1_val, 'slider_2_val)
{
	If Gt ('MODEM_CHECK_FREE_SPACE, 13)
	Then
	(
          Call 'ModemStartMessage ('DL_ADC) ;
          Call 'MODEM_PUT_1_BYTE_BY_ADDR ('mode) ;
          Call 'MODEM_PUT_4_BYTE_BY_ADDR ('slider_1_val) ;
          Call 'MODEM_PUT_4_BYTE_BY_ADDR ('slider_2_val) ;
          Call 'ModemEndMessage ('empty)
        )
        Else 'modem_nb_ovrn := 'modem_nb_ovrn +. 1
}

'DOWNLINK_SEND_DESIRED ('roll, 'pitch, 'x, 'y, 'altitude)
{
	If Gt ('MODEM_CHECK_FREE_SPACE, 24)
	Then
	(
          Call 'ModemStartMessage ('DL_DESIRED) ;
          Call 'MODEM_PUT_4_BYTE_BY_ADDR ('roll) ;
          Call 'MODEM_PUT_4_BYTE_BY_ADDR ('pitch) ;
          Call 'MODEM_PUT_4_BYTE_BY_ADDR ('x) ;
          Call 'MODEM_PUT_4_BYTE_BY_ADDR ('y) ;
          Call 'MODEM_PUT_4_BYTE_BY_ADDR ('altitude) ;
          Call 'ModemEndMessage ('empty)
        )
        Else 'modem_nb_ovrn := 'modem_nb_ovrn +. 1
}


'DOWNLINK_SEND_BAT ('voltage, 'flight_time,
		'battery, 'block_time, 'stage_time)
{
	If Gt ('MODEM_CHECK_FREE_SPACE, 12)
	Then
	(
          Call 'ModemStartMessage ('DL_BAT) ;
          Call 'MODEM_PUT_1_BYTE_BY_ADDR ('voltage) ;
          Call 'MODEM_PUT_2_BYTE_BY_ADDR ('flight_time) ;
          Call 'MODEM_PUT_1_BYTE_BY_ADDR ('battery) ;
          Call 'MODEM_PUT_2_BYTE_BY_ADDR ('block_time) ;
          Call 'MODEM_PUT_2_BYTE_BY_ADDR ('stage_time) ;
          Call 'ModemEndMessage ('empty)
        )
        Else 'modem_nb_ovrn := 'modem_nb_ovrn +. 1
}


'DOWNLINK_SEND_CLIMB_PID('gaz, 'climb, 'sum_err, 'pgain)
{
	If Gt ('MODEM_CHECK_FREE_SPACE, 18)
	Then
	(
          Call 'ModemStartMessage ('DL_CLIMB_PID) ;
          Call 'MODEM_PUT_2_BYTE_BY_ADDR ('gaz) ;
          Call 'MODEM_PUT_4_BYTE_BY_ADDR ('climb) ;
          Call 'MODEM_PUT_4_BYTE_BY_ADDR ('sum_err) ;
          Call 'MODEM_PUT_4_BYTE_BY_ADDR ('pgain) ;
          Call 'ModemEndMessage ('empty)
        )
        Else 'modem_nb_ovrn := 'modem_nb_ovrn +. 1
}

'DOWNLINK_SEND_DEBUG ('link_fbw_nb_err, 'link_fbw_fbw_nb_err,
		'modem_nb_ovrn, 'gps_nb_ovrn, 'mcu1_ppm_cpt)
{
	If Gt ('MODEM_CHECK_FREE_SPACE, 9)
	Then
	(
          Call 'ModemStartMessage ('DL_DEBUG) ;
          Call 'MODEM_PUT_1_BYTE_BY_ADDR ('link_fbw_nb_err) ;
          Call 'MODEM_PUT_1_BYTE_BY_ADDR ('link_fbw_fbw_nb_err) ;
          Call 'MODEM_PUT_1_BYTE_BY_ADDR ('modem_nb_ovrn) ;
          Call 'MODEM_PUT_1_BYTE_BY_ADDR ('gps_nb_ovrn) ;
          Call 'MODEM_PUT_1_BYTE_BY_ADDR ('mcu1_ppm_cpt) ;
          Call 'ModemEndMessage ('empty)
        )
        Else 'modem_nb_ovrn := 'modem_nb_ovrn +. 1
}

'DOWNLINK_SEND_NAVIGATION_REF ('east, 'north)
{
	If Gt ('MODEM_CHECK_FREE_SPACE, 12)
	Then
	(
          Call 'ModemStartMessage ('DL_NAVIGATION_REF) ;
          Call 'MODEM_PUT_4_BYTE_BY_ADDR ('east) ;
          Call 'MODEM_PUT_4_BYTE_BY_ADDR ('north) ;
          Call 'ModemEndMessage ('empty)
        )
        Else 'modem_nb_ovrn := 'modem_nb_ovrn +. 1
}


'DOWNLINK_SEND_PPRZ_MODE ('pprz_mode, 'vertical_mode,
	'inflight_calib_mode, 'mcu1_status, 'ir_estim_mode)
{
	If Gt ('MODEM_CHECK_FREE_SPACE, 9)
	Then
	(
          Call 'ModemStartMessage ('DL_PPRZ_MODE) ;
          Call 'MODEM_PUT_1_BYTE_BY_ADDR ('pprz_mode) ;
          Call 'MODEM_PUT_1_BYTE_BY_ADDR ('vertical_mode) ;
          Call 'MODEM_PUT_1_BYTE_BY_ADDR ('inflight_calib_mode) ;
          Call 'MODEM_PUT_1_BYTE_BY_ADDR ('mcu1_status) ;
          Call 'MODEM_PUT_1_BYTE_BY_ADDR ('ir_estim_mode) ;
          Call 'ModemEndMessage ('empty)
        )
        Else 'modem_nb_ovrn := 'modem_nb_ovrn +. 1
}


'DOWNLINK_SEND_NAVIGATION('nav_block, 'nav_stage, 'estimator_x, 'estimator_y,
		'desired_course, 'dist2_to_wp, 'course_pgain, 'dist2_to_home)
{
	If Gt ('MODEM_CHECK_FREE_SPACE, 30)
	Then
	(
          Call 'ModemStartMessage ('DL_NAVIGATION) ;
          Call 'MODEM_PUT_1_BYTE_BY_ADDR ('nav_block) ;
          Call 'MODEM_PUT_1_BYTE_BY_ADDR ('nav_stage) ;
          Call 'MODEM_PUT_4_BYTE_BY_ADDR ('estimator_x) ;
          Call 'MODEM_PUT_4_BYTE_BY_ADDR ('estimator_y) ;
          Call 'MODEM_PUT_4_BYTE_BY_ADDR ('desired_course) ;
          Call 'MODEM_PUT_4_BYTE_BY_ADDR ('dist2_to_wp) ;
          Call 'MODEM_PUT_4_BYTE_BY_ADDR ('course_pgain) ;
          Call 'MODEM_PUT_4_BYTE_BY_ADDR ('dist2_to_home) ;
          Call 'ModemEndMessage ('empty)
        )
        Else 'modem_nb_ovrn := 'modem_nb_ovrn +. 1
}


'ModemStartMessage ('DL_CALIB_START)
{
	If Equal ('DL_CALIB_START, 1)
	Then '__res_ModemStartMessage := 1
	Else '__res_ModemStartMessage := 0
}

'ModemEndMessage ('empty)
{
	'__res_ModemEndMessage := 1
}

'MODEM_PUT_2_BYTE_BY_ADDR ('data)
{
	'__res_MODEM_PUT_2_BYTE_BY_ADDR := 'data
}

'MODEM_PUT_4_BYTE_BY_ADDR ('data)
{
	'__res_MODEM_PUT_4_BYTE_BY_ADDR := 'data
}

'MODEM_PUT_1_BYTE_BY_ADDR ('data)
{
	'__res_MODEM_PUT_1_BYTE_BY_ADDR := 'data
}


.
endm)

(set side-effect sorts ESt RWBUF .)

(set context-update rules CallF .)

(islice Statement with defs myFuns wrt 'estimator_ir 'estimator_rad 'estimator_rad_of_ir 'modem_nb_ovrn .)
